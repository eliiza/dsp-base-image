# This is a GitLab CI configuration to build the project as a docker image
# The file is generic enough to be dropped in a project containing a working Dockerfile
# Author: Florent CHAUVEAU <florent.chauveau@gmail.com>
# Mentioned here: https://blog.callr.tech/building-docker-images-with-gitlab-ci-best-practices/

# do not use "latest" here, if you want this to work in the future
image: docker:18

stages:
  - build:base
  - build:runtimes
  - build:apps

before_script:
  # docker login asks for the password to be passed through stdin for security
  # we use $CI_JOB_TOKEN here which is a special token provided by GitLab
  - echo -n $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin $CI_REGISTRY

.build_script: &build_script
  script:
    - cd $DOCKERFILE_DIR
    # fetches the latest image (not failing if image is not found)
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    # builds the project, passing proxy variables, and vcs vars for LABEL
    # notice the cache-from, which is going to use the image we just pulled locally
    # the built image is tagged locally with the commit SHA, and then pushed to
    # the GitLab registry
    - >
      docker build
      --pull
      --build-arg VCS_REF=$CI_COMMIT_SHA
      --build-arg VCS_URL=$CI_PROJECT_URL
      --cache-from $CI_REGISTRY_IMAGE:latest
      --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      --build-arg BASE_CONTAINER=$BASE_CONTAINER
      --build-arg include_capabilities=$CAPABILITIES
      --build-arg environment_file=$CONDA_ENV_FILENAME
      .
    - |
      tags="$CI_COMMIT_SHA $CI_COMMIT_REF_SLUG"
      if [ "$CI_COMMIT_REF_NAME" = "master" ]; then
        tags="$tags latest"
      fi

      for tag in $tags; do
        dest="$CI_REGISTRY_IMAGE:$tag"
        echo "Tagging image $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA as $dest..."
        docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $dest
        echo "Pushing image $dest..."
        docker push $dest
      done

build:base:
  <<: *build_script
  stage: build:base
  variables:
    DOCKERFILE_DIR: runtime-base
    BASE_CONTAINER: nvidia/cuda:9.2-cudnn7-devel-ubuntu18.04
    CI_REGISTRY_IMAGE: kozai/runtime-base

build:runtime:python37:
  <<: *build_script
  stage: build:runtimes
  variables:
    DOCKERFILE_DIR: runtime-python37
    BASE_CONTAINER: kozai/runtime-base:$CI_COMMIT_SHA
    CI_REGISTRY_IMAGE: kozai/runtime-python37
    CONDA_ENV_FILENAME: python37

build:runtime:blazingsql:
  <<: *build_script
  stage: build:runtimes
  variables:
    DOCKERFILE_DIR: runtime-python37
    BASE_CONTAINER: kozai/runtime-base:$CI_COMMIT_SHA
    CI_REGISTRY_IMAGE: kozai/runtime-blazingsql
    CONDA_ENV_FILENAME: blazingsql

build:runtime:r35:
  <<: *build_script
  stage: build:runtimes
  variables:
    DOCKERFILE_DIR: runtime-r35
    BASE_CONTAINER: kozai/runtime-base:$CI_COMMIT_SHA
    CI_REGISTRY_IMAGE: kozai/runtime-r

build:runtime:swift:
  <<: *build_script
  stage: build:runtimes
  variables:
    DOCKERFILE_DIR: runtime-swift
    BASE_CONTAINER: kozai/runtime-base:$CI_COMMIT_SHA
    CI_REGISTRY_IMAGE: kozai/runtime-swift

build:notebook:python37:
  <<: *build_script
  stage: build:apps
  variables:
    DOCKERFILE_DIR: common-notebook
    BASE_CONTAINER: kozai/runtime-python37:$CI_COMMIT_SHA
    CI_REGISTRY_IMAGE: kozai/notebook-python37

build:notebook:blazingsql:
  <<: *build_script
  stage: build:apps
  variables:
    DOCKERFILE_DIR: common-notebook
    BASE_CONTAINER: kozai/runtime-blazingsql:$CI_COMMIT_SHA
    CI_REGISTRY_IMAGE: kozai/notebook-blazingsql

build:notebook:r35:
  <<: *build_script
  stage: build:apps
  variables:
    DOCKERFILE_DIR: common-notebook
    BASE_CONTAINER: kozai/runtime-r:$CI_COMMIT_SHA
    CI_REGISTRY_IMAGE: kozai/notebook-r
    CAPABILITIES: rstudio

build:notebook:swift:
  <<: *build_script
  stage: build:apps
  variables:
    DOCKERFILE_DIR: common-notebook
    BASE_CONTAINER: kozai/runtime-swift:$CI_COMMIT_SHA
    CI_REGISTRY_IMAGE: kozai/notebook-swift
    CAPABILITIES: swift

# build:dask:python37:
#   <<: *build_script
#   stage: build:apps
#   variables:
#     DOCKERFILE_DIR: dask
#     BASE_CONTAINER: eliiza/dsp-base-python37
#     CI_REGISTRY_IMAGE: eliiza/dask-python37
#
# build:spark:python37:
#   <<: *build_script
#   stage: build:apps
#   variables:
#     DOCKERFILE_DIR: spark
#     BASE_CONTAINER: eliiza/dsp-base-python37
#     CI_REGISTRY_IMAGE: eliiza/spark-python37
